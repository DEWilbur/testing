/// <reference types="Cypress" />
import Chance from 'chance';
import { gzipSync } from 'zlib';
import * as Mocha from 'mocha';
import * as Chai from 'chai';
const chance = new Chance();

describe('Settings', () => {
      ///Valid email and password
      const email = chance.email();
      const pass = 'ValidPassword2391';
      beforeEach(() => {
        cy.visit('http://localhost:3000');
        cy.get('input[data-cy=newItemField]').type('Write Test');
        cy.get('#addBtn').click();
        cy.get('tr[data-cy=todoItem]:nth-child(1)').should('contain', 'Write Test')
      })
  });

  it('blocks protectd routes', () => {

    // cy.pause();

        cy.get('#navToggle').click();
        cy.get('Settings').click();

        cy.get('notification-message').children()
            .should('contain', 'You must be logged in to proceed')
            .and('be.visible');       
  });

  it('blocks protectd routes', () => {
        ///User clicks Login
        cy.get('#navToggle').click();
        cy.contains('Login').click();

        //Asserts URL
        cy.url().should('include');

        //Fill out form
        cy.get('input[name=email]').type(email);
        cy.get('input[name=pass]').type(pass);
        cy.get('button[type=submit]').click();

        // Assert welcome message
        cy.contains('Welcome good man');
        cy.contains('Logout');

  });

    it ('allows the user the create notes', () => {
        // Custom login
        cy.login(email, pass)

        cy.get('#navToggle').click();
        cy.get('Settings').click();

        const noteText = chance.sentence({ words: 5 });
        const noteList = cy.get('main');

        noteList.should('not.contain');
    });
